buildscript {
    repositories {
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
    }
}

plugins {
    id 'maven-publish'
    id 'signing'
}

ext {
    groupId = 'ch.threema'
    webrtcVersion = '123'
    libraryVersion = '123.0.0'
}

apply plugin: 'com.android.library'

android {
    namespace 'ch.threema.webrtc'

    compileSdkVersion 34
    buildToolsVersion '34.0.0'

    defaultConfig {
        minSdkVersion 21
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishing {
        singleVariant('release')
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    implementation files('libs/libwebrtc.jar')
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.findByName('release')

                groupId = project.ext.groupId
                artifactId = project.name
                version = project.ext.libraryVersion

                pom {
                    name = 'WebRTC for Android'
                    description = "WebRTC m${project.ext.webrtcVersion} builds for Android, with some custom patches applied"
                    url = 'https://github.com/threema-ch/webrtc-android'

                    scm {
                        url = 'https://github.com/threema-ch/webrtc-android'
                    }

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'LICENSE-APACHE'
                        }
                        license {
                            name = 'The MIT License'
                            url = 'LICENSE-MIT'
                        }
                    }

                    developers {
                        developer {
                            id = 'db'
                            name = 'Danilo Bargen'
                            email = 'danilo.bargen@threema.ch'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                    credentials {
                        username ossrhUsername
                        password ossrhPassword
                    }
                }
            }
        }
    }

    signing {
        useGpgCmd() // Use gpg-agent. For config options, see `gradle.properties`.
        sign publishing.publications.release
    }
}
